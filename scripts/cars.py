#!/usr/bin/env python3
from reports import generate as report
from emails import generate as generate_email
from emails import send as send_email

import json
import locale
import sys


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  locale.setlocale(locale.LC_ALL, 'en_US.UTF8')
  max_revenue = {"revenue": 0}
  max_sales = {"total_sales": 0}
  car_most = {}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # TODO: also handle max sales
    if item["total_sales"] > max_sales["total_sales"]:
        max_sales = item
    # TODO: also handle most popular car_year
    if item["car"]["car_year"] in car_most.keys():
        car_most[item["car"]["car_year"]] += item["total_sales"]
    else:
        car_most[item["car"]["car_year"]] = item["total_sales"]
    set_values = car_most.values()
    value_max = max(set_values)
    key_max = max( car_most , key = car_most.get )
  summary = [
    "The {} generated the most revenue: ${}".format(
            format_car(max_revenue["car"]), max_revenue["revenue"]),
    "The {} had the most sales: {}".format(max_sales["car"]["car_model"], max_sales["total_sales"]),
    "The most popular year was {} with {} sales.".format(key_max, value_max)
  ]

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  print(summary)
  edited_summary = '\n'.join(summary)
  # TODO: turn this into a PDF report
  report('/tmp/cars.pdf', "Cars Report", edited_summary, cars_dict_to_table(data))

  # TODO: send the PDF report as an email attachment
  message = generate_email("automation@example.com", "student-03-98e4d963d929@example.com",
                         "Sales summary for last month", edited_summary, "/tmp/cars.pdf")
  send_email(message)
if __name__ == "__main__":
  main(sys.argv)